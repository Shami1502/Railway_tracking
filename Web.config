<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="Railway_Tracking.Data" type="Railway_Tracking.Data.Bases.NetTiersServiceSection, Railway_Tracking.Data" allowDefinition="MachineToApplication" restartOnExternalChanges="true"/>
    <section name="enterpriseLibrary.ConfigurationSource" type="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationSourceSection, Microsoft.Practices.EnterpriseLibrary.Common, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
  </configSections>
  <appSettings/>
  <connectionStrings>
    <add name="Railway_Tracking.Data.ConnectionString" connectionString="Data Source=DESKTOP-44NAMO1;Initial Catalog=Railway_Tracking;Integrated Security=True" />
    <add name="Railway_TrackingConnectionString" connectionString="Data Source=DESKTOP-44NAMO1;Initial Catalog=Railway_Tracking;Integrated Security=True"
      providerName="System.Data.SqlClient" />
    <add name="Railway_TrackingConnectionString2" connectionString="Data Source=DESKTOP-44NAMO1;Initial Catalog=Railway_Tracking;Integrated Security=True"
      providerName="System.Data.SqlClient" />
    <add name="Railway_TrackingConnectionString3" connectionString="Data Source=DESKTOP-44NAMO1;Initial Catalog=Railway_Tracking;Integrated Security=True"
      providerName="System.Data.SqlClient" />
    <add name="Railway_TrackingConnectionString4" connectionString="Data Source=DESKTOP-44NAMO1;Initial Catalog=Railway_Tracking;Integrated Security=True"
      providerName="System.Data.SqlClient" />
  </connectionStrings>
  <Railway_Tracking.Data defaultProvider="SqlNetTiersProvider">
    <providers>
      <!--
    *** SqlClient Provider ***
      connectionStringName: sqlclient connection string to the db
      useStoredProcedure: if true, indicates that we use the stored procedures, otherwise, we use parametrized queries that are embedded.
    -->
      <add name="SqlNetTiersProvider" type="Railway_Tracking.Data.SqlClient.SqlNetTiersProvider, Railway_Tracking.Data.SqlClient" connectionStringName="Railway_Tracking.Data.ConnectionString" useStoredProcedure="false" providerInvariantName="System.Data.SqlClient" entityFactoryType="Railway_Tracking.Entities.EntityFactory" useEntityFactory="true" enableEntityTracking="false" enableMethodAuthorization="false" defaultCommandTimeout="30"/>
      <!-- 
        *** WebserviceClient Provider ***
        The url parameter indicates the webservices url (ex: http://localhost/Railway_Tracking/Railway_TrackingServices.aspx)
        <add 
          name="WsNetTiersProvider" 
          type="Railway_Tracking.Data.WebServiceClient.WsNetTiersProvider, Railway_Tracking.Data.WebServiceClient"
          url="/Railway_TrackingServices.asmx" />
      -->
    </providers>
  </Railway_Tracking.Data>
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.7" />
      </system.Web>
  -->
  <system.web>
    <pages theme="default">
      <controls>
        <add tagPrefix="data" namespace="Railway_Tracking.Web.Data" assembly="Railway_Tracking.Web"/>
        <add tagPrefix="data" namespace="Railway_Tracking.Web.UI" assembly="Railway_Tracking.Web"/>
      </controls>
    </pages>
    <httpModules>
      <add name="EntityTransactionModule" type="Railway_Tracking.Web.Data.EntityTransactionModule, Railway_Tracking.Web"/>
    </httpModules>
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
    <compilation debug="true" targetFramework="4.7"/>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        <authentication mode="Windows" />
        -->
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
  </system.web>
	<system.webServer>
		<validation validateIntegratedModeConfiguration="false"/>
	</system.webServer>
  <enterpriseLibrary.ConfigurationSource selectedSource="File Configuration Source">
    <sources>
      <add name="File Configuration Source" type="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSource, Microsoft.Practices.EnterpriseLibrary.Common, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" filePath="entlib.config"/>
    </sources>
  </enterpriseLibrary.ConfigurationSource>

	
</configuration>